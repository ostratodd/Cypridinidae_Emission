canova(df$decays,df$kcat,k = 2,perm = 10000)
canova(df$decays,df$km,k = 2,perm = 10000)
plot(kcat~decays,df)
cor.test(kcat~decays,df)
cor.test(df$kcat,df$decays)
cor.test(df2$kcat,df2$decays)
cor.test(df$km,df$decays)
plot(km~decays,df)
plot(kcat~decays,df,col=ifelse(df$gen=="p","red","blue"))
plot(km~decays,df,col=ifelse(df$gen=="p","red","blue"))
plot(km~decays,df,col=ifelse(df$gen=="p","blue",ifelse(df$gen=="m","red","green")))
plot(kcat~decays,df,col=ifelse(df$gen=="p","blue",ifelse(df$gen=="m","red","green")))
library(deSolve); library(FME)
pulse_MS <- function(time,parameters,initials){
with(as.list(c(parameters, initials)),{
E = 1e-13
# C = initials[2]
# S = initials[1]
#
# kf = parameters[2] #binding
# kr = parameters[1] #disassociation
# kcat = parameters[3] #kcat
dC =  kf * (E - C)*S - (kr + kcat)*C
dS = -kf * (E - C)*S + kr*C
ODE <- list(c(dC, dS))
return(ODE)
})
}
t_sim <- seq(from = 0, to = 100, by = 0.5)
state <- c(S = 100, C = 0)
parm_st <- c(kr = 10, kf = 100, kcat = 2500)
Km <- (parm_st[1] + parm_st[3])/parm_st[2]
out_try <- radau(func = pulse_MS,times = t_sim,parms = parm_st,y = state)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
head(out_try)
plot(S~time,out_try,cex=0.25)
plot(C~time,out_try,cex=0.25)
state <- c(S = 10, C = 0)
parm_st <- c(kr = 10, kf = 100, kcat = 2500)
Km <- (parm_st[1] + parm_st[3])/parm_st[2]
out_try <- radau(func = pulse_MS,times = t_sim,parms = parm_st,y = state)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
head(out_try)
plot(S~time,out_try,cex=0.25)
plot(C~time,out_try,cex=0.25)
1*2
1*3
1*4
MM <- function(time,parameter,state){
E = parameter[1]
S = parameter[2]
C = parameter[3]
P = parameter[4]
kf = state[1]
kr = state[2]
kcat = state[3]
dE = -kf*E*S + kr*C + kcat*C
dS = -kf*E*S + kr*C
dC = kf*E*S - kf*C - kcat*C
dP = kcat*C
return(list(c(dE,dS,dC,dP)))
}
t = seq(0,100,0.5)
parm_state = (10,10,10)
parm_state = c(10,10,10)
st_init = c(10,10,10)
parm_init = c(1,10,0,0)
st_init = c(10,10,10)
MM <- function(time,parameter,state){
E = parameter[1]
S = parameter[2]
C = parameter[3]
P = parameter[4]
kf = state[1]
kr = state[2]
kcat = state[3]
dE = -kf*E*S + kr*C + kcat*C
dS = -kf*E*S + kr*C
dC = kf*E*S - kf*C - kcat*C
dP = kcat*C
return(list(c(dE,dS,dC,dP)))
}
out_try <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
parm_init = c(1,10,0,0)
st_init = c(10,10,10)
out_try <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
parm_init
MM(t,parm_init,st_init)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
m_out <- radau(func = MM,times = t,parms = st_init,y = parm_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25)
plot(C~time,m_out,cex=0.25)
m_out
st_init = c(1,10,0,0)
parm_init = c(10,10,10)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25)
plot(C~time,m_out,cex=0.25)
return(list(c(E,S,C,P)))
MM <- function(time,parameter,state){
E = parameter[1]
S = parameter[2]
C = parameter[3]
P = parameter[4]
kf = state[1]
kr = state[2]
kcat = state[3]
dE = -kf*E*S + kr*C + kcat*C
dS = -kf*E*S + kr*C
dC = kf*E*S - kf*C - kcat*C
dP = kcat*C
return(list(c(E,S,C,P)))
}
t = seq(0,100,0.5)
st_init = c(1,10,0,0)
parm_init = c(10,10,10)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
head(m_out)
return(list(c(dE,dS,dC,dP)))
MM <- function(time,parameter,state){
E = parameter[1]
S = parameter[2]
C = parameter[3]
P = parameter[4]
kf = state[1]
kr = state[2]
kcat = state[3]
dE = -kf*E*S + kr*C + kcat*C
dS = -kf*E*S + kr*C
dC = kf*E*S - kf*C - kcat*C
dP = kcat*C
return(list(c(dE,dS,dC,dP)))
}
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
head(m_out)
st_init = c(E = 1,S = 10,C = 0,P = 0)
parm_init = c(10,10,10)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
head(out)
head(_out)
head(m_out)
plot(S~time,m_out,cex=0.25)
plot(C~time,m_out,cex=0.25)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 1,S = 100,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 10,S = 100,C = 0,P = 0)
parm_init = c(10,10,10)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 0.5,S = 100,C = 0,P = 0)
parm_init = c(10,10,10)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(P~time,m_out,cex=0.25,"l")
plot(cumsum(C)~time,m_out,cex=0.25,"l")
head(m_out)
plot(diff(P)~diff(time),m_out,cex=0.25,"l")
plot(diff(P)~time,m_out,cex=0.25,"l")
plot(c(diff(P),0)~time,m_out,cex=0.25,"l")
parm_init = c(10,10,100)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(c(diff(P),0)~time,m_out,cex=0.25,"l")
st_init = c(E = 1,S = 100,C = 0,P = 0)
parm_init = c(10,10,100)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(c(diff(P),0)~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(P~time,m_out)
plot(P~time,m_out,"l")
plot(C~time,m_out,"l")
head(out_m)
head(m_out)
plot(c(diff(P),0)~C,m_out,cex=0.25,"l")
library(ggplot2)
ggplot(data=m_out,aes(x=time,y=c(diff(P),0))) + geom_point(aes(col=C))
ggplot(data=as.data.frame(m_out),aes(x=time,y=c(diff(P),0))) + geom_point(aes(col=C))
ggplot(data=as.data.frame(m_out),aes(x=time,y=c(diff(P),0))) + geom_point(aes(col=C),size=0.5)
ggplot(data=m_out,aes(x=time,y=C) + geom_point(aes(col=c(diff(P),0))))
ggplot(data=m_out,aes(x=time,y=C) + geom_point(aes(col=c(diff(P),0)))
)
ggplot(data=m_out,aes(x=time,y=C)) + geom_point(aes(col=c(diff(P),0)))
ggplot(data=as.data.frame(m_out),aes(x=time,y=C)) + geom_point(aes(col=c(diff(P),0)))
st_init = c(E = 1,S = 10,C = 0,P = 0)
parm_init = c(10,10,100)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 1,S = 100,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 1,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 10,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 100,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 1000,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
st_init = c(E = 10,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
plot(C~time,m_out,cex=0.25,"l")
par(mfrow=c(2,2))
plot(E~time,m_out,cex=0.25,"l")
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(P~time,m_out,cex=0.25,"l")
st_init = c(E = 100,S = 1000,C = 0,P = 0)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
par(mfrow=c(2,2))
plot(E~time,m_out,cex=0.25,"l")
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(P~time,m_out,cex=0.25,"l")
parm_init = c(100,10,100)
m_out <- radau(func = MM,times = t,parms = parm_init,y = st_init)#,atol = 1e10,rtol=1e-10,hmax = 0.01,maxsteps = 1000)
par(mfrow=c(2,2))
plot(E~time,m_out,cex=0.25,"l")
plot(S~time,m_out,cex=0.25,"l")
plot(C~time,m_out,cex=0.25,"l")
plot(P~time,m_out,cex=0.25,"l")
pvals <- read.csv("~/Desktop/meme_test_p.csv",header=TRUE)
head(pvals)
p.adjust(pvals$p_meme,method = "fdr")
p.adjust(pvals$p_meme,method = "BH") #not how they did it
p.adjust(pvals$p_meme,method = "BY") #not how they did it
pvals$p_meme
pvals$q_meme
p.adjust(pvals$p_meme,method = "FDR") #not how they did it
p.adjust(pvals$p_meme,method = "fdr") #not how they did it
pvals$q_meme
p.adjust(pvals$p_meme,method = "BY") #not how they did it
ps <- c(pvals$p_meme,pvals$p_fel)
p.adjust(ps,method = "fdr")
pvals
ps <- c(0.001,0.306)
p.adjust(ps,method = "fdr")
pvals_meme <- read.csv("~/Documents/GitHub/Cypridinidae_Emission/LuciferaseTree_dNds/results/hyphy/lucclade.meme.allsites.csv",header = TRUE)
head(pvals_meme)
pvals_meme$p.value
pvals_meme$p.value < 0.05
p.adjust(pvals_meme$p.value,method = "BY")
pvals_meme <- read.csv("~/Desktop/meme_p_values_correction.csv",header = TRUE)
p.adjust(pvals_meme$p.value,method = "fdr")
p.adjust(pvals_meme$pvalue,method = "fdr")
pvals_fel <- read.csv("~/Desktop/fel_p_values_correction.csv",header = TRUE)
pvals_fel <- read.csv("~/Desktop/fel_p_vales_correction.csv",header = TRUE)
p.adjust(pvals_fel$Pval,method = "fdr")
pvals_fel$q_vals <- p.adjust(pvals_fel$Pval,method = "fdr")
head(pvals_fel)
order(pvals_fel,decreasing = FALSE)
newp <- pvals_fel[order(pvals_fel$Codon),]
newp
write.csv(newp,"~/Desktop/pvals_fel_corrected.csv")
maindir <- "~/Documents/GitHub/Cypridinidae_EmissionSpectra/"
setwd(maindir)
maindir <- "~/Documents/GitHub/Cypridinidae_Emission/"
setwd(maindir)
#First read in data sets and complete analyses for figures and tables
source("1_Emission_Functions.R")
source("2_Read_Datasets.R")
source("3_Calculate_parameters.R")
source("4_MutagenesisLuciferase.R")
#Figure 3 plot lambda max values (color)
source("Figure3.R")
#Figure 2 is in vitro expression experiments
source("Figure2.R")
#Figure 2 is in vitro expression experiments
source("Figure2.R")
Figure2a <- ggplot(data=maxluc, aes(x=construct, y=log10(light), fill=construct)) +
scale_fill_manual(values=c("white","white","#0092ff","#0092ff","#0092ff")) + geom_boxplot() + geom_jitter() +
xlab("Species") + ylab(expression('log'[10]*' (Counts Per Second)')) +
scale_x_discrete(labels = c("Blank", "HEK", "P. morini (Bz)", "M. sp. SVU (Bz)", "V. tsujii (US)")) +
theme(legend.position = "none")
Figure2b <- ggplot(data=light_data2, aes(x = Species, y = log10(mean_cps),fill=count_type)) + geom_boxplot() +
geom_point(position = position_jitterdodge()) + scale_discrete_manual(aes(x=sp)) +
xlab("Species") + ylab(expression('log'[10]*'(CPS / Total Protein Conc. )')) +
scale_fill_manual(values = c("white","#0092ff"),name="Measures",labels=c("After + luciferin","Before")) +
scale_x_discrete(labels=c("Pichia","C. noctiluc (Jp)","K. hastingsi (Bz)","M. sp. SVU (Bz)","V. tsujii (US)")) +
theme(legend.position = "none")
grid.arrange(Figure2a, Figure2b, nrow = 1)
#Figure 2 is in vitro expression experiments
source("Figure2.R")
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) + theme(legend.position = "none") -> Figure3
fig3
Figure3
head(clean)
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD"
head(clean)
unique(clean$abbreviation)
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD (Pa)"
clean$label[clean$abbreviation == "P_SFM"] <- "P. sp. SFM (Pa)"
clean$label[clean$abbreviation == "M_CON"] <- "C. sp. CONT (Pa)"
clean$label[clean$abbreviation == "M_LLL"] <- "M. sp. LLL (Pa)"
clean$label[clean$abbreviation == "M_MFU"] <- "M. sp. MFU (Pa)"
clean$label[clean$abbreviation == "P_ann"] <- "P. annecohenae (Bz)"
clean$label[clean$abbreviation == "P_mor"] <- "P. morini (Bz)"
clean$label[clean$abbreviation == "M_SMU"] <- "M. sp. SMU (Pa)"
clean$label[clean$abbreviation == "K_has"] <- "K. hastingsi (Bz)"
clean$label[clean$abbreviation == "M_chi"] <- "M. chicoi (Bz)"
clean$label[clean$abbreviation == "M_SVU"] <- "M. sp. SVU (Bz)"
clean$label[clean$abbreviation == "P_GPH"] <- "P. sp. GPH (Ro)"
clean$label[clean$abbreviation == "P_WLU"] <- "P. sp. WLU (Ro)"
clean$label[clean$abbreviation == "M_LSD"] <- "M. sp. LSD (PR)"
clean$label[clean$abbreviation == "M_IR"] <- "P. sp. IR (Ro)"
clean$label[clean$abbreviation == "M_RD"] <- "P. sp. RD (Ro)"
clean$label[clean$abbreviation == "M_DR"] <- "P. sp. DR (Ro)"
clean$label[clean$abbreviation == "V_tsu"] <- "V. tsujii (US)"
clean$label[clean$abbreviation == "K_SPU"] <- "K. sp. SPU (PR)"
clean$label[clean$abbreviation == "V_hil"] <- "V. hilgendorfii (Jp)"
clean$label[clean$abbreviation == "V_hil_p"] <- "V. hilgendorfii - published (Jp)"
clean$label[clean$abbreviation == "P_gra_p"] <- "P. graminicola - published (Pa)"
clean$label[clean$abbreviation == "C_noc_p"] <- "C. noctiluca - published (Jp)"
fig3 <- ggplot(data=clean, aes(x=label, y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) + theme(legend.position = "none") -> Figure3
Figure3
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -45)) -> Figure3
Figure3
View(clean)
clean$label[clean$abbreviation == "M_DU"] <- "P. sp. DU (Ro)"
head(clean)
clean2 <- clean2 %>% group_by(.,abbreviation) %>% summarise(lamda = mean(sgMax))
clean2 <- clean %>% group_by(.,abbreviation) %>% summarise(lamda = mean(sgMax))
clean2
clean3 <- reorder(clean2)
clean3 <- reorder(clean2$lamda)
clean3 <- order(clean2$lamda)
clean3
clean3 <- clean2[order(clean2$lamda)]
clean3 <- clean2[order(clean2$lamda),]
clean3
clean3 <- clean2[order(clean2$lamda,decreasing = TRUE),]
clean3
fig3 <- ggplot(data=clean, aes(x=fct_reorder(label, sgMax, fun = mean), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -90)) -> Figure3
Figure3
fig3 <- ggplot(data=clean, aes(x=fct_reorder(label, sgMax, fun = mean,.desc = TRUE), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3
fig3 <- ggplot(data=clean, aes(x=fct_reorder(label, sgMax, fun = median,.desc = TRUE), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3
head(clea)
head(clean)
fig3 <- ggplot(data=clean, aes(x= reorder(label, sgMax, fun = median,.desc = TRUE), y=sgMax, fill=abbreviation)) +
geom_boxplot() + geom_jitter()
fig3
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -90)) -> Figure3
Figure3
fig3 <- ggplot(data=clean, aes(x= reorder(label, -sgMax, fun = median,), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -90)) -> Figure3
Figure 3
Figure3
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -90,hjust = 0)) -> Figure3
Figure3
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -45,hjust = 0,)) -> Figure3
Figure3
clean$label[clean$abbreviation == "V_hil_p"] <- "V. hilgendorfii * (Jp)"
clean$label[clean$abbreviation == "P_gra_p"] <- "P. graminicola * (Pa)"
clean$label[clean$abbreviation == "C_noc_p"] <- "C. noctiluca * (Jp)"
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -45,hjust = 0,)) -> Figure3
Figure3
fig3 <- ggplot(data=clean, aes(x= reorder(label, -sgMax, fun = median,), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -45,hjust = 0,)) -> Figure3
Figure3
View(clean)
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -60,hjust = 0,)) -> Figure3
Figure3
head(clean)
clean$genus[clean$genus == "Contragula"] <- "C-group"
View(clean)
clean$genus[clean$abbreviation == "M_CON"] <- "C-group"
clean$genus[clean$label == "C. sp. CONT (Pa)"] <- "C-group"
clean$genus[c(10,11,12)] <- "C-group"
clean
class(clean)
View(clean)
clean$genus[c(10,11,12)] <- as.factor("C-group")
class(clean$genus)
class(clean$genus) <- as.character(clean$genus)
head(clean)
clean <- subset(alldata, error < 0.02 | replicate=="Vhil_tsuji" | replicate=="Cnoc_ohmiya" | replicate=="Pgra_huvard")
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD (Pa)"
clean$label[clean$abbreviation == "P_SFM"] <- "P. sp. SFM (Pa)"
clean$label[clean$abbreviation == "M_CON"] <- "C. sp. CONT (Pa)"
clean$label[clean$abbreviation == "M_LLL"] <- "M. sp. LLL (Pa)"
clean$label[clean$abbreviation == "M_MFU"] <- "M. sp. MFU (Pa)"
clean$label[clean$abbreviation == "P_ann"] <- "P. annecohenae (Bz)"
clean$label[clean$abbreviation == "P_mor"] <- "P. morini (Bz)"
clean$label[clean$abbreviation == "M_SMU"] <- "M. sp. SMU (Pa)"
clean$label[clean$abbreviation == "K_has"] <- "K. hastingsi (Bz)"
clean$label[clean$abbreviation == "M_chi"] <- "M. chicoi (Bz)"
clean$label[clean$abbreviation == "M_SVU"] <- "M. sp. SVU (Bz)"
clean$label[clean$abbreviation == "P_GPH"] <- "P. sp. GPH (Ro)"
clean$label[clean$abbreviation == "P_WLU"] <- "P. sp. WLU (Ro)"
clean$label[clean$abbreviation == "M_LSD"] <- "M. sp. LSD (PR)"
clean$label[clean$abbreviation == "M_IR"] <- "P. sp. IR (Ro)"
clean$label[clean$abbreviation == "M_RD"] <- "P. sp. RD (Ro)"
clean$label[clean$abbreviation == "M_DU"] <- "P. sp. DU (Ro)"
clean$label[clean$abbreviation == "V_tsu"] <- "V. tsujii (US)"
clean$label[clean$abbreviation == "K_SPU"] <- "K. sp. SPU (PR)"
clean$label[clean$abbreviation == "V_hil"] <- "V. hilgendorfii (Jp)"
clean$label[clean$abbreviation == "V_hil_p"] <- "V. hilgendorfii * (Jp)"
clean$label[clean$abbreviation == "P_gra_p"] <- "P. graminicola * (Pa)"
clean$label[clean$abbreviation == "C_noc_p"] <- "C. noctiluca * (Jp)"
revalue(clean$genus,c("Contragula"="C-group"))
library(plyr)
revalue(clean$genus,c("Contragula"="C-group"))
clean <- subset(alldata, error < 0.02 | replicate=="Vhil_tsuji" | replicate=="Cnoc_ohmiya" | replicate=="Pgra_huvard")
levels(clean$genus)[levels(clean$genus)=="Contragula"] <- "C-group
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD (Pa)"
clean$label[clean$abbreviation == "P_SFM"] <- "P. sp. SFM (Pa)"
clean$label[clean$abbreviation == "M_CON"] <- "C. sp. CONT (Pa)"
clean$label[clean$abbreviation == "M_LLL"] <- "M. sp. LLL (Pa)"
clean$label[clean$abbreviation == "M_MFU"] <- "M. sp. MFU (Pa)"
clean$label[clean$abbreviation == "P_ann"] <- "P. annecohenae (Bz)"
clean$label[clean$abbreviation == "P_mor"] <- "P. morini (Bz)"
clean$label[clean$abbreviation == "M_SMU"] <- "M. sp. SMU (Pa)"
clean$label[clean$abbreviation == "K_has"] <- "K. hastingsi (Bz)"
clean$label[clean$abbreviation == "M_chi"] <- "M. chicoi (Bz)"
clean$label[clean$abbreviation == "M_SVU"] <- "M. sp. SVU (Bz)"
clean$label[clean$abbreviation == "P_GPH"] <- "P. sp. GPH (Ro)"
clean$label[clean$abbreviation == "P_WLU"] <- "P. sp. WLU (Ro)"
clean$label[clean$abbreviation == "M_LSD"] <- "M. sp. LSD (PR)"
clean$label[clean$abbreviation == "M_IR"] <- "P. sp. IR (Ro)"
clean$label[clean$abbreviation == "M_RD"] <- "P. sp. RD (Ro)"
clean$label[clean$abbreviation == "M_DU"] <- "P. sp. DU (Ro)"
clean$label[clean$abbreviation == "V_tsu"] <- "V. tsujii (US)"
clean$label[clean$abbreviation == "K_SPU"] <- "K. sp. SPU (PR)"
clean$label[clean$abbreviation == "V_hil"] <- "V. hilgendorfii (Jp)"
clean$label[clean$abbreviation == "V_hil_p"] <- "V. hilgendorfii * (Jp)"
clean$label[clean$abbreviation == "P_gra_p"] <- "P. graminicola * (Pa)"
clean$label[clean$abbreviation == "C_noc_p"] <- "C. noctiluca * (Jp)"
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
levels(clean$genus)[levels(clean$genus)=="Contragula"] <- "C-group"
View(clean)
levels(clean$genus)[levels(clean$genus)=="Fred"] <- "'Vargula'"
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -60,hjust = 0,)) -> Figure3
Figure3
fig3 <- ggplot(data=clean, aes(x= reorder(label, -sgMax, fun = median,), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -60,hjust = 0,)) -> Figure3
Figure3
View(clean)
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD (Pa)"
fig3 <- ggplot(data=clean, aes(x= reorder(label, -sgMax, fun = median,), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -60,hjust = 0,)) -> Figure3
Figure3
library(plyr)
levels(clean$genus)[levels(clean$genus)=="Contragula"] <- "C-group"
levels(clean$genus)[levels(clean$genus)=="Fred"] <- "'Vargula'"
clean$label[clean$abbreviation == "P_EGD"] <- "P. sp. EGD (Pa)"
clean$label[clean$abbreviation == "P_SFM"] <- "P. sp. SFM (Pa)"
clean$label[clean$abbreviation == "M_CON"] <- "C. sp. CONT (Pa)"
clean$label[clean$abbreviation == "M_LLL"] <- "M. sp. LLL (Pa)"
clean$label[clean$abbreviation == "M_MFU"] <- "M. sp. MFU (Pa)"
clean$label[clean$abbreviation == "P_ann"] <- "P. annecohenae (Bz)"
clean$label[clean$abbreviation == "P_mor"] <- "P. morini (Bz)"
clean$label[clean$abbreviation == "M_SMU"] <- "M. sp. SMU (Pa)"
clean$label[clean$abbreviation == "K_has"] <- "K. hastingsi (Bz)"
clean$label[clean$abbreviation == "M_chi"] <- "M. chicoi (Bz)"
clean$label[clean$abbreviation == "M_SVU"] <- "M. sp. SVU (Bz)"
clean$label[clean$abbreviation == "P_GPH"] <- "P. sp. GPH (Ro)"
clean$label[clean$abbreviation == "P_WLU"] <- "P. sp. WLU (Ro)"
clean$label[clean$abbreviation == "M_LSD"] <- "M. sp. LSD (PR)"
clean$label[clean$abbreviation == "M_IR"] <- "M. sp. IR (Ro)"
clean$label[clean$abbreviation == "M_RD"] <- "M. sp. RD (Ro)"
clean$label[clean$abbreviation == "M_DU"] <- "M. sp. DU (Ro)"
clean$label[clean$abbreviation == "V_tsu"] <- "V. tsujii (US)"
clean$label[clean$abbreviation == "K_SPU"] <- "K. sp. SPU (PR)"
clean$label[clean$abbreviation == "V_hil"] <- "V. hilgendorfii (Jp)"
clean$label[clean$abbreviation == "V_hil_p"] <- "V. hilgendorfii * (Jp)"
clean$label[clean$abbreviation == "P_gra_p"] <- "P. graminicola * (Pa)"
clean$label[clean$abbreviation == "C_noc_p"] <- "C. noctiluca * (Jp)"
fig3 <- ggplot(data=clean, aes(x= reorder(label, -sgMax, fun = median,), y=sgMax, fill=abbreviation)) + geom_boxplot() + geom_jitter()
fig3 + facet_grid(cols = vars(genus), scales = "free_x", switch = "x", space = "free")  + ylab("Lambda max (nm)") + xlab("Species") +
scale_fill_manual(values=c("#00a9ff", "#00a9ff","#007bff", "#007bff", "#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#00a9ff","#00a9ff", "#007bff","#007bff", "#007bff","#007bff", "#007bff", "#007bff","#007bff", "#00a9ff","#007bff", "#007bff")) +
theme(legend.position = "none",axis.text.x = element_text(angle = -60,hjust = 0,)) -> Figure3
Figure3
