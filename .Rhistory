maindir <- "~/Documents/GitHub/Cypridinidae_EmissionSpectra/"
setwd(maindir)
pwd
#First read in data sets and complete analyses for figures and tables
source("1_Emission_Functions.R")
source("2_Read_Datasets.R")
source("3_Calculate_parameters.R")
source("4_MutagenesisLuciferase.R")
### statistical tests for the expression assay data ###
#source publication file first 0_Publications.R
library(lme4); library(rcompanion)
#t.tests to compare the activity of luciferases expressed in mammalian cells to the HEK cells
mam.pmo <- maxluc[maxluc$construct == "PhM" | maxluc$construct == "HEK",]
setwd("~/Documents/GitHub/Cypridinidae_Emission/Raw Data")
############GPH
workingdir <- "6-08-2016/GPH"
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
setwd(paste0(rootdir,workingdir))
graphEmission("GPH_1_05sec_x10x1sp_live_sig.asc", "GPH_1_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_1;
graphEmission("GPH_2_05sec_x10x1sp_live_sig.asc", "GPH_2_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_2;
graphEmission("GPH_3_05sec_x10x1sp_live_sig.asc", "GPH_3_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_3;
graphEmission("GPH_4_05sec_x10x1sp_live_sig.asc", "GPH_4_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_4;
graphEmission("GPH_5_05sec_x10x1sp_live_sig.asc", "GPH_5_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_5;
graphEmission("GPH_6_05sec_x10x1sp_live_sig.asc", "GPH_6_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_6;
graphEmission("GPH_7_05sec_x10x1sp_live_sig.asc", "GPH_7_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_7;
graphEmission("GPH_8_05sec_x10x1sp_live_sig.asc", "GPH_8_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> GPH_8;
##############WLU
workingdir <- "6-08-2016/WLU"
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
setwd(paste0(rootdir,workingdir))
graphEmission("WLU_1_05sec_x5x1sp_sig.asc", "WLU_1_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_1;
graphEmission("WLU_2_05sec_x5x1sp_sig.asc", "WLU_2_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_2;
graphEmission("WLU_3_05sec_x5x1sp_sig.asc", "WLU_3_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_3;
graphEmission("WLU_4_05sec_x5x1sp_sig.asc", "WLU_4_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_4;
graphEmission("WLU_5_05sec_x5x1sp_sig.asc", "WLU_5_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_5;
graphEmission("WLU_6_05sec_x5x1sp_sig.asc", "WLU_6_05sec_x5x1sp_bgd.asc", calibration,5,TRUE) -> WLU_6;
#graphEmission("WLU_7_05sec_x10x1sp_dry_sig.asc", "WLU_7_05sec_x10x1sp_dry_bgd.asc", calibration,10,TRUE) -> WLU_7; NO signal here
graphEmission("WLU_8_05sec_x10x3sp_dry_sig.asc", "WLU_8_05sec_x10x3sp_dry_bgd.asc", calibration,10,TRUE) -> WLU_8;
graphEmission("WLU_10_05sec_x10x3sp_dry_sig.asc", "WLU_10_05sec_x10x3sp_dry_bgd.asc", calibration,10,TRUE) -> WLU_10;
##############LSD --  This is actually from Puerto Rico not Roatan
workingdir <- "6-08-2016/LSD"
setwd(paste0(rootdir,workingdir))
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
graphEmission("LSD1.txt", "background.txt", calibration,10,TRUE) -> LSD_1;
graphEmission("LSD2.txt", "background.txt", calibration,10,TRUE) -> LSD_2;
##############IR
workingdir <- "6-08-2016/IR"
setwd(paste0(rootdir,workingdir))
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
graphEmission("IR_1_05sec_x5x1sp_dead_sig.asc", "IR_1_05sec_x5x1sp_dead_bgd.asc", calibration,10,TRUE) -> IR_1;
graphEmission("IR_2_05sec_x5x1sp_dead_sig.asc", "IR_2_05sec_x5x1sp_dead_bgd.asc", calibration,10,TRUE) -> IR_2;
graphEmission("IR_3_05sec_x5x1sp_live_sig.asc", "IR_3_05sec_x5x1sp_live_bgd.asc", calibration,10,TRUE) -> IR_3;
graphEmission("IR_4_05sec_x5x1sp_dead_sig.asc", "IR_4_05sec_x5x1sp_dead_bgd.asc", calibration,10,TRUE) -> IR_4;
graphEmission("IR_5_05sec_x5x1sp_dead_sig.asc", "IR_5_05sec_x5x1sp_dead_bgd.asc", calibration,10,TRUE) -> IR_5;
graphEmission("IR_6_05sec_x5x1sp_dead_sig.asc", "IR_6_05sec_x5x1sp_dead_bgd.asc", calibration,10,TRUE) -> IR_6;
##############RD
workingdir <- "6-08-2016/RD"
setwd(paste0(rootdir,workingdir))
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
graphEmission("RD_1_05sec_x5x1sp_dead_sig.asc", "RD_1_05sec_x5x1sp_dead_bgd.asc", calibration,5,TRUE) -> RD_1;
graphEmission("RD_2_05sec_x5x1sp_dead_sig.asc", "RD_2_05sec_x5x1sp_dead_bgd.asc", calibration,5,TRUE) -> RD_2;
graphEmission("RD_3_05sec_x5x1sp_dead_sig.asc", "RD_3_05sec_x5x1sp_dead_bgd.asc", calibration,5,TRUE) -> RD_3;
graphEmission("RD_4_05sec_x5x1sp_dead_sig.asc", "RD_4_05sec_x5x1sp_dead_bgd.asc", calibration,5,TRUE) -> RD_4;
graphEmission("RD_5_05sec_x5x1sp_dead_sig.asc", "RD_5_05sec_x5x1sp_dead_bgd.asc", calibration,5,TRUE) -> RD_5;
###############DU
workingdir <- "6-08-2016/DU"
setwd(paste0(rootdir,workingdir))
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
graphEmission("DU_1_05sec_x10x1sp_live_sig.asc", "DU_1_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> DU_1;
graphEmission("DU_2_05sec_x10x1sp_live_sig.asc", "DU_2_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> DU_2;
graphEmission("DU_3_05sec_x10x1sp_live_sig.asc", "DU_3_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> DU_3;
graphEmission("DU_4_05sec_x10x1sp_live_sig.asc", "DU_4_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> DU_4;
graphEmission("DU_5_05sec_x10x1sp_live_sig.asc", "DU_5_05sec_x10x1sp_live_bgd.asc", calibration,10,TRUE) -> DU_5;
#********************************
#Collection date: July 14, 2016
#Vargula tsujii from Catalina Island
##############Vts -- Vargula tsujii from Catalina Island, CA; USA
workingdir <- "7-14-2016/Vtsu"
setwd(paste0(rootdir,workingdir))
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
graphEmission("Vtsu_fem1_sig.asc", "Vtsu_fem1_bgd.asc", calibration,10,TRUE) -> Vtsu_1;
graphEmission("Vtsu_fem2_sig.asc", "Vtsu_fem2_bgd.asc", calibration,10,TRUE) -> Vtsu_2;
graphEmission("Vtsu_fem3_sig.asc", "Vtsu_fem3_bgd.asc", calibration,10,TRUE) -> Vtsu_3;
graphEmission("Vtsu_male1_sig.asc", "Vtsu_male1_bgd.asc", calibration,5,TRUE) -> Vtsu_4;
graphEmission("Vtsu_male2_sig.asc", "Vtsu_male2_bgd.asc", calibration,5,TRUE) -> Vtsu_5;
graphEmission("Vtsu_male3_sig.asc", "Vtsu_male3_bgd.asc", calibration,5,TRUE) -> Vtsu_6;
graphEmission("Vtsu_male4_sig.asc", "Vtsu_male4_bgd.asc", calibration,10,TRUE) -> Vtsu_7;
graphEmission("Vtsu_male5_sig.asc", "Vtsu_male5_bgd.asc", calibration,10,TRUE) -> Vtsu_8;
#********************************
#Collection date: August 10, 2016
#Puerto Rico specimens 8-10-2016*******************************************************************************
##############WCU
workingdir <- "8-10-2016/WCU"
setwd(paste0(rootdir,workingdir))
background <- "background.txt"
calibration <- "../correction factor.txt"
graphEmission("WCU1.txt", background, calibration,10,TRUE) -> WCU_1;
graphEmission("WCU2.txt", "background.txt", calibration,10,TRUE) -> WCU_2;
graphEmission("WCU3.txt", "background.txt", calibration,10,TRUE) -> WCU_3;
#graphEmission("WCU4.txt", "background.txt", calibration,10,TRUE) -> WCU4; #WCU3 and WCU4 are the same data files
graphEmission("WCU5.txt", "background.txt", calibration,10,TRUE) -> WCU_5;
##############SPU -- A Kornickeria from Puerto Rico
workingdir <- "8-10-2016/SPU"
setwd(paste0(rootdir,workingdir))
background <- "background.asc"
calibration <- "../correction factor.txt"
graphEmission("SPU1_v2.txt", background, calibration,10,TRUE) -> SPU_1;
graphEmission("SPU2.asc.txt", background, calibration,10,TRUE) -> SPU_2;
graphEmission("SPU3.asc", background, calibration,10,TRUE) -> SPU_3;
graphEmission("SPU4.asc", background, calibration,10,TRUE) -> SPU_4;
background <- "background2.txt"
graphEmission("SPU5.txt", background, calibration,10,TRUE) -> SPU_5;
graphEmission("SPU6.txt", background, calibration,10,TRUE) -> SPU_6;
graphEmission("SPU7.txt", background, calibration,10,TRUE) -> SPU_7;
#**********************************
#Data Collection: October 5, 2016
#********************************************************************
#From this point on, we removed integrating sphere to read from cuvette for higher sensitivity
##############Photeros annecohenae sent by Karl from near Belize City. Different population than normal Belize Pa, so added "karl" to end
workingdir <- "10-05-2016/Pann"
setwd(paste0(rootdir,workingdir))
#background is different for each specimen
calibration <- "../correction factor nosphere.txt"
graphEmission("PhotAnnKarl1_sig.asc", "PhotAnnKarl1_bgd.asc", calibration,10,TRUE) -> Pann_1;
graphEmission("PhotAnnKarl2_sig.asc", "PhotAnnKarl2_bgd.asc", calibration,10,TRUE) -> Pann_2;
graphEmission("PhotAnnKarl3_sig.asc", "PhotAnnKarl3_bgd.asc", calibration,10,TRUE) -> Pann_3;
#Vhilg as standard.
workingdir <- "10-05-2016/Vhilg"
setwd(paste0(rootdir,workingdir))
#background is different for each specimen
calibration <- "../correction factor nosphere.txt"
graphEmission("VhilgendorfiiOcto5_sig.asc", "VhilgendorfiiOcto5_bgd.asc", calibration,10,TRUE) -> Vhil10052016_1;
#****************************
#Data Collection: January 23, 2017
#********************************************************************
#####Belize data 1-23-17 sent by Gretchen Gerrish to UCSB. Dried.
background <- "../1-23-17background.asc";
calibration <- "../correction factor.txt";
#Khastingsi-------------------------------------------------------------
workingdir <- "1-23-2017/Khastingsi"
setwd(paste0(rootdir,workingdir))
graphEmission(  "KhastingsiDry.asc", background, calibration,20,TRUE) -> Khas_1;
graphEmission("KhastingsiLive1.asc", background, calibration,20,TRUE) -> Khas_2;
graphEmission("KhastingsiLive2.asc", background, calibration,20,TRUE) -> Khas_3;
#MSH-------------------------------------------------------------
workingdir <- "1-23-2017/MSH"
setwd(paste0(rootdir,workingdir))
graphEmission(  "MSHlive1.asc", background, calibration,20,TRUE) -> MSH_1;
graphEmission(  "MSHlive2.asc", background, calibration,20,TRUE) -> MSH_2;
graphEmission(  "MSHlive3.asc", background, calibration,20,TRUE) -> MSH_3;
graphEmission(  "MSHlive4.asc", background, calibration,20,TRUE) -> MSH_4;
graphEmission(  "MSHlive5.asc", background, calibration,20,TRUE) -> MSH_5;
#Pmor-------------------------------------------------------------
workingdir <- "1-23-2017/Pmorini"
setwd(paste0(rootdir,workingdir))
graphEmission(  "PmoriniLive1.asc", background, calibration,20,TRUE) -> Pmor_1;
graphEmission(  "PmoriniLive2.asc", background, calibration,20,TRUE) -> Pmor_2;
graphEmission(  "PmoriniLive3.asc", background, calibration,20,TRUE) -> Pmor_3;
graphEmission(  "PmoriniLive4.asc", background, calibration,20,TRUE) -> Pmor_4;
graphEmission(  "Pmorini5remax.txt", background, calibration,17,TRUE) -> Pmor_5; #first 3 maxed sensor, removed
#SVD-------------------------------------------------------------
workingdir <- "1-23-2017/SVD"
setwd(paste0(rootdir,workingdir))
graphEmission(  "SVDLive1.asc", background, calibration,20,TRUE) -> SVD_1;
graphEmission(  "SVDLive2.asc", background, calibration,20,TRUE) -> SVD_2;
graphEmission(  "SVDLive3.asc", background, calibration,20,TRUE) -> SVD_3;
graphEmission(  "SVDLive4.asc", background, calibration,20,TRUE) -> SVD_4;
graphEmission(  "SVDLive5.asc", background, calibration,20,TRUE) -> SVD_5;
#SVU-------------------------------------------------------------
workingdir <- "1-23-2017/SVU"
setwd(paste0(rootdir,workingdir))
graphEmission(  "SVULive1.asc", background, calibration,20,TRUE) -> SVU_1;
graphEmission(  "SVULive2.asc", background, calibration,20,TRUE) -> SVU_2;
graphEmission(  "SVULive3.asc", background, calibration,20,TRUE) -> SVU_3;
graphEmission(  "SVULive4.asc", background, calibration,20,TRUE) -> SVU_4;
graphEmission(  "SVUremax5.txt", background, calibration,16,TRUE) -> SVU_5;	#first 4 maxed sensor, removed
#*****************************
#Collection Date: May 30, 2017
#********************************************************************
#5-30-2017
#Dried species from Panama May 2017
# collected at Bocas del Toro, and dried in oven. Carried with silica to keep dry
workingdir <- "5-30-2017/EGD"
background <- "../baselinePanamaSeriesMay26.asc";
calibration <- "../panama species correction factor.txt"
#EGD-------------------------------------------------------------
setwd(paste0(rootdir,workingdir))
graphEmission("EGD_dried_male1_removeMaxed.txt", background, calibration,13,TRUE) -> EGD_1; #First 2 maxed, so deleted
#graphEmission("EGD_dried_male2.asc", background, calibration, 15, TRUE) -> EGD_2; #no light
graphEmission("EGD_dried_male3.asc", background, calibration,15,TRUE) -> EGD_3;
graphEmission("EGD_dried_male4.asc", background, calibration,15,TRUE) -> EGD_4; #check 2 strange outliers
graphEmission("EGD_dried_male5.asc", background, calibration,15,TRUE) -> EGD_5;
#Contragula------------------------------------------------------
workingdir <- "5-30-2017/CONT"
setwd(paste0(rootdir,workingdir))
graphEmission("CONT_Panama_dried_male1_removeMaxed.txt", background, calibration,12,TRUE) -> Cont_bocas_1; #removed first 3 scans maxed sensor
graphEmission("CONT_Panama_dried_male2.asc", background, calibration,15,TRUE) -> Cont_bocas_2;
graphEmission("CONT_Panama_dried_male3.asc", background, calibration,15,TRUE) -> Cont_bocas_3;
#LLL-------------------------------------------------------------
workingdir <- "5-30-2017/LLL"
setwd(paste0(rootdir,workingdir))
graphEmission("LLL_dried_male1.asc", background, calibration,15,TRUE) -> LLL_1;
graphEmission("LLL_dried_male2.asc", background, calibration,15,TRUE) -> LLL_2;
graphEmission("LLL_dried_male3.asc", background, calibration,15,TRUE) -> LLL_3;
graphEmission("LLL_dried_male4.asc", background, calibration,15,TRUE) -> LLL_4;
graphEmission("LLL_dried_male5.asc", background, calibration,15,TRUE) -> LLL_5;
#MFU-------------------------------------------------------------
workingdir <- "5-30-2017/MFU"
setwd(paste0(rootdir,workingdir))
graphEmission("MFU_male1_remax.txt", background, calibration,14,TRUE) -> MFU_1; #First sample is maxed, so deleted
graphEmission("MFU_dried_male2.asc", background, calibration,15,TRUE) -> MFU_2;
graphEmission("MFU_dried_male3.asc", background, calibration,15,TRUE) -> MFU_3;
graphEmission("MFU_male4_remax.txt", background, calibration,12,TRUE) -> MFU_4; #First 3samples maxed, so deleted
graphEmission("MFU_dried_male5.asc", background, calibration,15,TRUE) -> MFU_5;
#SFM-------------------------------------------------------------
workingdir <- "5-30-2017/SFM"
setwd(paste0(rootdir,workingdir))
graphEmission("SFM_dried_male1.asc", background, calibration,15,TRUE) -> SFM_1;
graphEmission("SFM_dried_male2.asc", background, calibration,15,TRUE) -> SFM_2;
graphEmission("SFM_dried_male3.asc", background, calibration,15,TRUE) -> SFM_3;
graphEmission("SFM_dried_male4.asc", background, calibration,15,TRUE) -> SFM_4;
graphEmission("SFM_dried_male5.asc", background, calibration,15,TRUE) -> SFM_5;
#SMU-------------------------------------------------------------
workingdir <- "5-30-2017/SMU"
setwd(paste0(rootdir,workingdir))
graphEmission("SMU_dried_male1.asc", background, calibration,15,TRUE) -> SMU_1;
graphEmission("SMU_dried_male2.asc", background, calibration,15,TRUE) -> SMU_2;
graphEmission("SMU_dried_male3.asc", background, calibration,15,TRUE) -> SMU_3;
graphEmission("SMU_male4_remax.txt", background, calibration,11,TRUE) -> SMU_4; #last 4 maxed to deleted
graphEmission("SMU_dried_male5.asc", background, calibration,15,TRUE) -> SMU_5;
#Even though Vargula hilgendorfii collected on different days, placing here for the purpose
#of ordering the data in the figures more easily
#Vargula hilgendorfii control-------------------------------------------------------------
workingdir <- "1-23-2017/Vhil_standard"
background <- "../1-23-17background.asc";
calibration <- "../correction factor.txt";
setwd(paste0(rootdir,workingdir))
graphEmission(  "VhilgendorfiiDry.asc", background, calibration,20,TRUE) -> Vhil012317_1;
graphEmission(  "VhilgendorfiiDry2.asc", background, calibration,20,TRUE) -> Vhil012317_2;
graphEmission(  "VhilgendorfiiDry3.asc", background, calibration,20,TRUE) -> Vhil012317_3;
#**********************************
#Data Collection: September 7, 2016
#********************************************************************
#Ordered dried Vargula hilgendorfii from Carolina Biological. This is
#to compare with spectrum taken by Yasuo Mitani in Japan, and to published
#spectra of Vargula hilgendorfii. Also, used these dried samples later to
#serve as a sort of standard.
#Vhilg
workingdir <- "9-07-2016/Vhilg"
setwd(paste0(rootdir,workingdir))
background <- "bgd.asc"
calibration <- "../correction factor.txt"
graphEmission("Vhilg1.asc", background, calibration,10,TRUE) -> Vhil090716_1;
graphEmission("Vhilg2.asc", background, calibration,10,TRUE) -> Vhil090716_2;
graphEmission("Vhilg3.asc", background, calibration,10,TRUE) -> Vhil090716_3;
graphEmission("Vhilg4.asc", background, calibration,10,TRUE) -> Vhil090716_4;
graphEmission("Vhilg5_DeleteLastAcq.asc", background, calibration,9,TRUE) -> Vhil090716_5;
graphEmission("Vhilg6.asc", background, calibration,10,TRUE) -> Vhil090716_6;
#**********************************
#Data Collection: September 20, 2016
#********************************************************************
#Ordered dried Vargula hilgendorfii from Carolina Biological.
#Vhilg
workingdir <- "9-20-2016/Vhilg"
setwd(paste0(rootdir,workingdir))
background <- "background_bgd.asc"
calibration <- "../correction factor.txt"
graphEmission("Vhilg1_3indiv.asc", background, calibration,10,TRUE) -> Vhil092016_1;
graphEmission("Vhilg_2_3indiv.asc", background, calibration,10,TRUE) -> Vhil092016_2;
graphEmission("Vhilg3_3indiv.asc", background, calibration,10,TRUE) -> Vhil092016_3;
#*******************************************************************************
#Non-ucsb data and published data
#Emily Ellis and Yasuo Mitani set up integrating sphere and spectroradiometer to record emission data in Japan
#This data is already calculated in photons for each wavelength, so no need to run graphEmission to subtract background
workingdir <- "non-ucsb/Vhil"
setwd(paste0(rootdir,workingdir))
raw <- read.csv(file="Vh.csv");
Vhun <- data.frame(wavelength = raw$Wavelength.nm., sum=raw$Var.1.21sec.);
Vhil_Japan <- data.frame(wavelength = Vhun$wavelength, sum=Vhun$sum/max(Vhun$sum, na.rm=T));
#Published spectrum for Vargula hilgendorfii
raw <- read.table(file="Vh from Tsuji paper Tess scan.txt");
Vhun <- data.frame(wavelength = raw$V1, sum=raw$V2);
Vhil_tsuji <- data.frame(wavelength = Vhun$wavelength, sum=Vhun$sum/max(Vhun$sum, na.rm=T));
#Published spectrum for Cypridina noctiluca in patent by Ohmiya
workingdir <- "non-ucsb/Cnoc"
setwd(paste0(rootdir,workingdir))
raw <- read.table(file="noctiluca WT datathief.txt");
Cnoc_ohmiya <- data.frame(wavelength = raw$V1, sum=raw$V2);
#################Pg -- Photeros gramminicola from Huvard 1993, digitized - already smoothed.
workingdir <- "non-ucsb/Pgra"
setwd(paste0(rootdir,workingdir))
raw <- read.table(file="Pg.txt");
Pgra_huvard <- data.frame(wavelength = raw$V1, sum=raw$V2);
#Set back to maindir
setwd(maindir)
############GPH
workingdir <- "6-08-2016/GPH"
#background #all different backgrounds, so specified in call to graphEmission
calibration <- "../correction factor.txt"
setwd(paste0(rootdir,workingdir))
#Supplemental Table S3- all emission parameter data for each individual organism
source("TableS2.R")
maindir <- "~/Documents/GitHub/Cypridinidae_Emission/"
setwd(maindir)
#First read in data sets and complete analyses for figures and tables
source("1_Emission_Functions.R")
source("2_Read_Datasets.R")
source("3_Calculate_parameters.R")
source("4_MutagenesisLuciferase.R")
fullcompositetable
#conversion table for sites corresponding between Cypridina and present alignment
read.csv(file="../LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign
alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))
alignment %>% arrange(V1) -> alignment #sort by species name
colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"
#**************Functions to translate between alignment numbers for individual amino acids
aligned2cyp <- function(alignednumber) {		#This translates the present alignment number to the # in Cypridina. Input #
#conversion table for sites corresponding between Cypridina and present alignment
read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign
cyptoalign$Cypridina_noctiluca_BAD08210[match(alignednumber,cyptoalign$Aligned)]
}
cyp2aligned <- function(cypnumber) {		#This translates the number in Cyprdina to the present alignment number. Input #
#conversion table for sites corresponding between Cypridina and present alignment
read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign
cyptoalign$Aligned[match(cypnumber,cyptoalign$Cypridina_noctiluca_BAD08210)]
}
displaysites <- function(al_sites){
alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))
alignment %>% arrange(V1) -> alignment #sort by species name
colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"
view <- alignment[,c("sp",paste("s",al_sites, sep=""))]
data.frame(view[-1]) -> view_df; view_df->view_df_named;
rownames(view_df_named) <- view$sp
view
}
#****************In old versions, I hand coded mutations into a csv file. These could be error prone, so did more automated approach below
#These are therefore no longer used
#For simplicity in R coding, I have 3 separate files. If I were better at R I could easily pull subsets out of 1 large file, but alas
#So, cnplus is a file that contains all the sequence data
read.csv(file="Luciferase/Cypridina only.csv") -> cn
read.csv(file="Luciferase/Cypridina mutagenesis.csv") -> cnplus
read.csv(file="Luciferase/NonCypridina only.csv") -> nc
#*****************These are important sites -- either mutated or under positive selection
#Mutated
allmutsites <- c(38, 45, 75, 79, 87, 126, 167, 170, 178, 191, 197, 223, 258, 276, 280, 372, 375, 403, 404, 405, 406, 407, 479)
varmutsites <- c(38, 178, 375, 404, 405) #Cypridina numbering sites with 3 states
#Positive selection
al_fel <- c(43, 209) #positively selected in FEL these are alignment numbers
meme_table <- read.csv("LuciferaseTree_dNds/results/hyphy/lucclade.meme.csv",header=TRUE)
al_meme <- meme_table$Codon
#******************Here combining positively selected site data with decay data
decay <- read.csv("Raw Data/expression-kinetics/decay_averages_all_for comparison_with_color.csv",header=TRUE)
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)
tmpmerge <- merge(decay, translate, by="PubName")
lucNkinetics <- merge(alignment, tmpmerge, by="sp")
pos_sel_decay <- lucNkinetics[,c("sp",paste("s",meme$Codon, sep=""),"lambda")]
remove_constant(pos_sel_decay)->pos_sel_decay ##Invariant sites because luc varies in spp without decay data
require(dplyr)
#******************Here combining positively selected site data with decay data
decay <- read.csv("Raw Data/expression-kinetics/decay_averages_all_for comparison_with_color.csv",header=TRUE)
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)
remove_constant(pos_sel_col)->pos_sel_col ##Invariant sites because luc varies in spp without color data
#t.tests to compare the activity of luciferases expressed in mammalian cells to the HEK cells
mam.pmo <- maxluc[maxluc$construct == "PhM" | maxluc$construct == "HEK",]
#Mammalian expression
mam_data <- read.csv(file="Raw Data/expression-kinetics/2014_mammalian_assays.csv", header=TRUE)
#Add column for dilution*substrate
luciferin <- mam_data$dilution*mam_data$substrate
mam_data2 <- cbind(mam_data,luciferin)
mam_data <- mam_data2
#Subset data. the Soro-luc constructs did not have proper signal peptides
tsuluc <- grep("VtLa", mam_data$construct); tsujii <- mam_data[tsuluc,];
pmorluc <- grep("PhM", mam_data$construct); morini <- mam_data[pmorluc,]
svuluc <- grep("SVUluc", mam_data$construct); svu <- mam_data[svuluc,]
blank <- grep("Blank", mam_data$construct); blankcells <- mam_data[blank,]
hek <- grep("HEK", mam_data$construct); hekcells <- mam_data[hek,]
mam_combine <- rbind(tsujii, morini, hekcells, blankcells, svu)
subset(mam_combine, log(luciferin) > 6.5) -> maxluc
#t.tests to compare the activity of luciferases expressed in mammalian cells to the HEK cells
mam.pmo <- maxluc[maxluc$construct == "PhM" | maxluc$construct == "HEK",]
t.test(log10(mam.pmo$light)~mam.pmo$construct)
mam.svu <- maxluc[maxluc$construct == "SVUluc" | maxluc$construct == "HEK",]
t.test(log10(mam.svu$light)~mam.svu$construct)
mam.vts <- maxluc[maxluc$construct == "VtLa" | maxluc$construct == "HEK",]
t.test(log10(mam.vts$light)~mam.vts$construct)
p.adjust(c(0.001253,4.51e-09,4.56e-09),method = "bonf")
##mixed model to account for repeated measures amongst samples##
light_data_drop <- subset.data.frame(light_data,!is.na(light_data$cps_norm))
##mixed model to account for repeated measures amongst samples##
light_data <- read.csv("Raw Data/expression-kinetics/2019_pichia_assays.csv",header=TRUE)
light_data2 <- light_data %>% group_by(Species,type,sample,count_type,Concentration,date) %>% summarise(mean_cps = mean(cps_norm))
light_data_drop <- subset.data.frame(light_data,!is.na(light_data$cps_norm))
light_data_drop$Species <- factor(light_data_drop$Species,levels = c("Pichia","CNO","KHC","SVU","VTS"))
m.rand <- lme(log10(cps_norm) ~ Species*count_type, random = ~1 | sample/Replicate, data = light_data_drop)
m.rand_null <- gls(log10(cps_norm) ~ Species*count_type, data = light_data_drop)
summary(m.rand)
##mixed model to account for repeated measures amongst samples##
library(nlme)
m.rand <- lme(log10(cps_norm) ~ Species*count_type, random = ~1 | sample/Replicate, data = light_data_drop)
m.rand_null <- gls(log10(cps_norm) ~ Species*count_type, data = light_data_drop)
summary(m.rand)
anova(m.rand,m.rand_null)
nagelkerke(m.rand,m.rand_null)
plotNormalHistogram(residuals(m.rand))
plot(fitted(m.rand), residuals(m.rand))
##Supplemental figure of the effect sizes (only works with lme4 models)
m.rand_lmer <- lmer(log10(cps_norm) ~ Species*count_type + (1|sample/Replicate),data = light_data_drop)
##mixed model to account for repeated measures amongst samples##
library(nlme); library(lme4)
##Supplemental figure of the effect sizes (only works with lme4 models)
m.rand_lmer <- lmer(log10(cps_norm) ~ Species*count_type + (1|sample/Replicate),data = light_data_drop)
ggCaterpillar(ranef(m.rand_lmer)) #significant, varying random effects across samples indicate that we should account for it
ggCaterpillar <- function(re, QQ=FALSE, likeDotplot=TRUE, detailedFacetLabs = TRUE) {
f <- function(x, nm = "ranef plot") {
pv   <- attr(x, "postVar")
cols <- 1:(dim(pv)[1])
se   <- unlist(lapply(cols, function(i) sqrt(pv[i, i, ])))
ord  <- unlist(lapply(x, order)) + rep((0:(ncol(x) - 1)) * nrow(x), each=nrow(x))
pDf  <- data.frame(y=unlist(x)[ord],
ci=1.96*se[ord],
nQQ=rep(stats::qnorm(stats::ppoints(nrow(x))), ncol(x)),
ID=factor(rep(rownames(x), ncol(x))[ord], levels=rownames(x)[ord]),
ind=gl(ncol(x), nrow(x), labels=names(x)))
if(detailedFacetLabs){
pDf$ind <- ifelse(grepl("(Intercept)", pDf$ind), "intercept adjustment", paste0("slope adj: ", pDf$ind))
}
if(QQ) {  ## normal QQ-plot
p <- ggplot(pDf, aes_string(x="nQQ", y="y"))
p <- p + facet_wrap(~ ind, scales="free")
p <- p + xlab("Standard normal quantiles") + ylab("Random effect quantiles")
} else {  ## caterpillar dotplot
p <- ggplot(pDf, aes_string(x="ID", y="y")) + coord_flip()
if(likeDotplot) {  ## imitate dotplot() -> same scales for random effects
p <- p + facet_wrap(~ ind)
} else {           ## different scales for random effects
p <- p + facet_grid(ind ~ ., scales="free_y")
}
p <- p + xlab(nm) + ylab("Random effects")
scale <- 12-log(length(levels(pDf$ID)),2)
p <- p + theme(axis.text.y = element_text(size=scale))
}
p <- p + theme(legend.position="none")
# p <- p + labs(title= nm)
p <- p + geom_hline(yintercept=0, lwd = I(7/12), colour = I(grDevices::hsv(0/12, 7/12, 7/12)), alpha = I(5/12))
p <- p + geom_errorbar(aes_string(ymin="y - ci", ymax="y + ci"), width=0, colour="black")
p <- p + geom_point(aes())
return(p)
}
#   lapply(re, f) # original
lapply(seq_along(re), function(y, n, i) { f(y[[i]], n[[i]]) }, y=re, n=names(re)) # adds plot names
}
ggCaterpillar(ranef(m.rand_lmer)) #significant, varying random effects across samples indicate that we should account for it
Q
##Supplemental figure of the effect sizes (only works with lme4 models)
m.rand_lmer <- lmer(log10(cps_norm) ~ Species*count_type + (1|sample/Replicate),data = light_data_drop)
?isSingular
light_data <- read.csv("Raw Data/expression-kinetics/2019_pichia_assays.csv",header=TRUE)
light_data2 <- light_data %>% group_by(Species,type,sample,count_type,Concentration,date) %>% summarise(mean_cps = mean(cps_norm))
light_data_drop <- subset.data.frame(light_data,!is.na(light_data$cps_norm))
light_data_drop$Species <- factor(light_data_drop$Species,levels = c("Pichia","CNO","KHC","SVU","VTS"))
m.rand <- lme(log10(cps_norm) ~ Species*count_type, random = ~1 | sample/Replicate, data = light_data_drop)
m.rand_null <- gls(log10(cps_norm) ~ Species*count_type, data = light_data_drop)
summary(m.rand)
anova(m.rand,m.rand_null)
nagelkerke(m.rand,m.rand_null)
plotNormalHistogram(residuals(m.rand))
plot(fitted(m.rand), residuals(m.rand))
##Supplemental figure of the effect sizes (only works with lme4 models)
m.rand_lmer <- lmer(log10(cps_norm) ~ Species*count_type + (1|sample/Replicate),data = light_data_drop)
m.rand_lmer
summary(m.rand_lmer)
ggCaterpillar(ranef(m.rand_lmer)) #significant, varying random effects across samples indicate that we should account for it
### statistical tests for the expression assay data ###
#source publication file first 0_Publications.R
library(lme4); library(rcompanion); library(nlme); library(ggplot2)
##Supplemental figure of the effect sizes (only works with lme4 models)
m.rand_lmer <- lmer(log10(cps_norm) ~ Species*count_type + (1|sample/Replicate),data = light_data_drop)
ggCaterpillar(ranef(m.rand_lmer)) #significant, varying random effects across samples indicate that we should account for it
head(light_data_drop)
unique(light_data_drop$sample)
t.test(log10(mam.pmo$light)~mam.pmo$construct)
mam.svu <- maxluc[maxluc$construct == "SVUluc" | maxluc$construct == "HEK",]
t.test(log10(mam.svu$light)~mam.svu$construct)
t.test(log10(mam.vts$light)~mam.vts$construct)
##mixed model to account for repeated measures amongst samples##
light_data <- read.csv("Raw Data/expression-kinetics/2019_pichia_assays.csv",header=TRUE)
p.adjust(c(0.001253,4.51e-09,4.56e-09),method = "bonf")
t.test(log10(cno$mean_cps)~cno$count_type)
##t-tests between before/after in each species to test change in light##
cno <- subset.data.frame(light_data2,light_data2$Species == "CNO")
cno <- subset.data.frame(cno,!is.na(cno$mean_cps))
t.test(log10(cno$mean_cps)~cno$count_type)
khc <- subset.data.frame(light_data2,light_data2$Species == "KHC")
t.test(log10(khc$mean_cps)~khc$count_type)
vts <- subset.data.frame(light_data2,light_data2$Species == "VTS")
t.test(log10(vts$mean_cps)~vts$count_type)
svu2 <- subset.data.frame(light_data2,light_data2$Species == "SVU")
t.test(log10(svu2$mean_cps)~svu2$count_type)
p.adjust(c(0.0002923,0.02686,0.02313,0.005704),method = "bonf")
svu2 <- subset.data.frame(light_data_drop,light_data_drop$Species == "SVU")
t.test(log10(svu2$mean_cps)~svu2$count_type)
svu2
svu2 <- subset.data.frame(light_data2,light_data2$Species == "SVU")
t.test(log10(svu2$mean_cps)~svu2$count_type)
svu2
