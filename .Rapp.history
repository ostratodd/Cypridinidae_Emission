positivelyselectedThatPredictDecay
positivelyselectedThatPredictdecay
source("Table4.R")#
table4
table4 <- anova(lmax_anova)
table4
fullcompositetable
require(phytools)#
#
InterestingSites[complete.cases(InterestingSites), ] -> full#
data.frame(cbind(full$Lmax_Mean, full$lambda))->pms#
row.names(pms) <- full$sp#
c("Khas", "Mchi", "MspIR", "MspSVU", "Pan", "Pmor",  "PspWLU", "Vhil")-> row.names(pms)#
pruned.tree<-drop.tip(luc_tree,luc_tree$tip.label[-match(full$sp, luc_tree$tip.label)])#
c("Mchi", "MspIR", "MspSVU", "Pmor", "Pan", "PspWLU", "Khas", "Vhil")->pruned.tree$tip.label#
#
phylomorphospace(pruned.tree, pms, label="radial", xlab="Lambda max (nm)", ylab="Enzymatic Decay Constant", cx=.1)
decay_anova <- lm(lambda ~ s160 + s189 + s261 + s291, data = pos_sel_lam) # > 13 appearances#
anova(decay_anova)
pos_sel
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Correlation with Enzymatic Decay"
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Episodic Diversifying Selection"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Enzymatic Decay"
fullcompositetable
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Episodic Diversifying Selection"#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection"#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"
fullcompositetable
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"
fullcompositetable
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"
fullcompositetable
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
rbind(fullcompositetable, c("+", "+","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
fullcompositetable
fullcompositetable
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
InterestingSites[complete.cases(InterestingSites), ] -> full#
data.frame(cbind(full$Lmax_Mean, full$lambda))->pms#
row.names(pms) <- full$sp#
c("Khas", "Mchi", "MspIR", "MspSVU", "Pan", "Pmor",  "PspWLU", "Vhil")-> row.names(pms)#
pruned.tree<-drop.tip(luc_tree,luc_tree$tip.label[-match(full$sp, luc_tree$tip.label)])#
c("Mchi", "MspIR", "MspSVU", "Pmor", "Pan", "PspWLU", "Khas", "Vhil")->pruned.tree$tip.label#
#
phylomorphospace(pruned.tree, pms, label="radial", xlab="Lambda max (nm)", ylab="Enzymatic Decay Constant", cx=.1)
fullcompositetable
require(phytools)#
#
InterestingSites[complete.cases(InterestingSites), ] -> full#
data.frame(cbind(full$Lmax_Mean, full$lambda))->pms#
row.names(pms) <- full$sp#
c("Khas", "Mchi", "MspIR", "MspSVU", "Pan", "Pmor",  "PspWLU", "Vhil")-> row.names(pms)#
pruned.tree<-drop.tip(luc_tree,luc_tree$tip.label[-match(full$sp, luc_tree$tip.label)])#
c("Mchi", "MspIR", "MspSVU", "Pmor", "Pan", "PspWLU", "Khas", "Vhil")->pruned.tree$tip.label#
#
phylomorphospace(pruned.tree, pms, label="radial", xlab="Lambda max (nm)", ylab="Enzymatic Decay Constant", cx=.1)
InterestingSites
aligned2cyp(41)
fullcompositetable
alignment
tree<-luc_tree
fullcompositetable
x <-alignment$s207
x
help(getstates)
help(getStates)
plotTree(tree,type="fan",fsize=0.8,ftype="i")
require(phytools)
plotTree(tree,type="fan",fsize=0.8,ftype="i")
phytools.plotTree()
plot.tree(tree,type="fan",fsize=0.8,ftype="i")
plot.tree(tree)
plot(tree)
unloadNamespace("plotTree")
help(plotTree)
nloadNamespace("plotTree")#
#
require(phytools)
unloadNamespace("plotTree")#
#
require(phytools)
plotTree(tree,type="fan",fsize=0.8,ftype="i")
x <- alignment$s207
row.names(x) <- alignment$sp
x
alignment$sp
row.names(x) <- alignment$sp
row.names(x)
df(x)
data.frame(x)
data.frame
data.frame(x, row.names=alignment$sp)
data.frame(x, row.names=alignment$sp) -> x
setNames(x[,1], rownames(x))
s207 <- setNames(x[,1], rownames(x))
s207
plotTree(luc_tree,type="fan",fsize=0.7,ftype="i",lwd=1)
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))
require(dplyr)#
#
alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))#
alignment %>% arrange(V1) -> alignment #sort by species name #
colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"
require(phytools)#
#
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))
plotTree(eel.tree,type="fan",fsize=0.7,ftype="i",lwd=1)
plotTree(luc_tree,type="fan",fsize=0.7,ftype="i",lwd=1)
plotTree(luc_tree,type="fan",fsize=5,ftype="i",lwd=1)
plotTree(luc_tree,type="fan",fsize=.1,ftype="i",lwd=1)
plotTree(luc_tree,type="fan",fsize=.3,ftype="i",lwd=1)
plotTree(luc_tree,fsize=.3,ftype="i",lwd=1)
plotTree(luc_tree,fsize=.6,ftype="i",lwd=1)
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)#
#
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],#
    y=0.8*par()$usr[3],fsize=0.8)
fitER<-ace(s207,luc_tree,model="ER",type="discrete")#
fitER
fitER<-ace(s207,luc_tree,model="ER",type="discrete")
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
ladderize(luc_tree, right=TRUE) -> luc_tree#
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
fitER<-ace(s207,luc_tree,model="ER",type="discrete")#
fitER
fitER<-ace(s207,luc_tree_root,model="ER",type="discrete")
fitER
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)#
fitER<-ace(s207,luc_tree_root,model="ER",type="discrete")#
fitER
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
ladderize(luc_tree, right=TRUE) -> luc_tree#
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
fitER<-ace(s207,luc_tree_root,model="ER",type="discrete")#
fitER
fitER$lik.anc
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
help(plotTree)
alignment$s207
alignment[,207]
alignment[,206]
alignment[,208]
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
ladderize(luc_tree, right=TRUE) -> luc_tree#
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
cols<-setNames(c("red","blue", "green", "orange"),levels(s207))#
#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)#
fitER<-ace(s207,luc_tree_root,model="ER",type="discrete")#
fitER#
fitER$lik.anc#
#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
help(plotTree)
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
ladderize(luc_tree, right=TRUE) -> luc_tree#
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do#
#
tree<-luc_tree#
x <- alignment$s207#
#
data.frame(x, row.names=alignment$sp) -> x#
#
s207 <- setNames(x[,1], rownames(x))#
fitER<-ace(s207,luc_tree_root,model="ER",type="discrete")#
fitER#
fitER$lik.anc#
#
quartz("Site 207 - Neutrally evolving color site", 10, 4)#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
quartz("Site 207 - Neutrally evolving color site", 10, 5)#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
quartz("Site 207 - Neutrally evolving color site", 7, 5)#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
quartz("Site 207 - Neutrally evolving color site", 8, 5)#
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    pie=fitER$lik.anc,piecol=cols,cex=0.4)#
tiplabels(pie=to.matrix(s207[luc_tree_root$tip.label],#
    levels(s207)),piecol=cols,cex=0.3)
plotASRsite <- function(site) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	quartz("Site 207 - Neutrally evolving color site", 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
plotASRsite(207)
fullcompositetable
require(dplyr)#
#
alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))#
alignment %>% arrange(V1) -> alignment #sort by species name #
colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"#
#**************Functions to translate between alignment numbers for individual amino acids#
aligned2cyp <- function(alignednumber) {		#This translates the present alignment number to the # in Cypridina. Input ##
	#conversion table for sites corresponding between Cypridina and present alignment#
	read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign#
	cyptoalign$Cypridina_noctiluca_BAD08210[match(alignednumber,cyptoalign$Aligned)]#
}#
cyp2aligned <- function(cypnumber) {		#This translates the number in Cyprdina to the present alignment number. Input ##
	#conversion table for sites corresponding between Cypridina and present alignment#
	read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign#
	cyptoalign$Aligned[match(cypnumber,cyptoalign$Cypridina_noctiluca_BAD08210)]#
}#
displaysites <- function(al_sites){#
	alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))#
	alignment %>% arrange(V1) -> alignment #sort by species name #
	colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"#
#
	view <- alignment[,c("sp",paste("s",al_sites, sep=""))]#
	data.frame(view[-1]) -> view_df; view_df->view_df_named;#
	rownames(view_df_named) <- view$sp#
	view	#
}#
#****************In old versions, I hand coded mutations into a csv file. These could be error prone, so did more automated approach below#
#These are therefore no longer used#
#For simplicity in R coding, I have 3 separate files. If I were better at R I could easily pull subsets out of 1 large file, but alas#
#So, cnplus is a file that contains all the sequence data#
read.csv(file="Luciferase/Cypridina only.csv") -> cn#
read.csv(file="Luciferase/Cypridina mutagenesis.csv") -> cnplus#
read.csv(file="Luciferase/NonCypridina only.csv") -> nc#
#
#*****************These are important sites -- either mutated or under positive selection#
	#Mutated#
allmutsites <- c(38, 45, 75, 79, 87, 126, 167, 170, 178, 191, 197, 223, 258, 276, 280, 372, 375, 403, 404, 405, 406, 407, 479)#
  al_allmutsites <- cyp2aligned(allmutsites)#
#
varmutsites <- c(38, 178, 375, 404, 405) #Cypridina numbering sites with 3 states#
  al_varmutsites <- cyp2aligned(varmutsites)#
#
	#Positive selection#
al_fel <- c(43, 209) #positively selected in FEL these are alignment numbers#
  fel <- aligned2cyp(al_fel)#
#
meme_table <- read.csv("LuciferaseTree_dNds/results/hyphy/lucclade.meme.csv",header=TRUE)#
al_meme <- meme_table$Codon#
  meme <- aligned2cyp(al_meme)#
#******************Create data frame for mutations (only lmax for mutations). data frame called mutated#
#csv file containing mutants and lmax data#
read.csv(file="LuciferaseTree_dNds/results/Cypridina_mutations.csv", header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))->mutseqs#
colnames(mutseqs)[2:ncol(mutseqs)] <- paste("c",seq(1,(ncol(mutseqs)-1)),sep="")#
colnames(mutseqs)[555] <- "lmax" #last column is 555, which contains lambda max values for mutants#
mutated <- data.frame(cbind(mutseqs$V1, mutseqs$c38, mutseqs$c45, mutseqs$c75, mutseqs$c79, mutseqs$c87, mutseqs$c126, mutseqs$c167, mutseqs$c170, mutseqs$c178, mutseqs$c191, mutseqs$c197, mutseqs$c223, mutseqs$c258, mutseqs$c276, mutseqs$c280, mutseqs$c372, mutseqs$c375, mutseqs$c403, mutseqs$c404, mutseqs$c405, mutseqs$c406, mutseqs$c407, mutseqs$c479, mutseqs$lmax) )#
colnames(mutated) <- c("mutant", "c38", "c45", "c75", "c79","c87", "c126", "c167", "c170", "c178", "c191", "c197", "c223", "c258", "c276", "c280", "c372", "c375", "c403", "c404", "c405", "c406", "c407", "c479", "lmax")#
as.numeric(as.character(mutated$lmax))->mutated$lmax#
#
#********************Create data frame for natural variants of mutated sites.  The data fram is called mut_nat_col for mutated sites; natural; color#
#combine cypridina mutations with natural luciferases for mutated sites#
#
displaysites(al_allmutsites) -> nat_mutsites#
table1 <- read.table(file="Table1.txt", sep="\t", header=TRUE) #Read again if not executed above#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(translate, table1, by='Species')#
lucNcolor <- merge(nat_mutsites, tmpmerge, by='sp')#
natural_col <- merge(alignment, tmpmerge, by='sp')#
alignment_numbers <- c(38, 45, 75, 79, 87, 126, 167, 170, 178, 191, 197, 223, 258, 276, 280, 372, 375, 403, 404, 405, 406, 407, 479)#
cbind(natural_col$sp,natural_col[,cyp2aligned(alignment_numbers+1)], natural_col$Lmax_Mean) -> mut_nat_col#
colnames(mut_nat_col) <- colnames(mutated)#
#
#********************Combine mutated sites and natural variants at those same sites called all_col_mut#
rbind(mutated, mut_nat_col) -> all_col_mut#
#
#*******************sites differ between Pan and Pmo#
displaysites(c(38,57,110,111,171,182,187,189,224,266,273,371,478)) -> panpmo#
#
#***********************#
#Read results in csv from meme selection analysis, including positively selected sites#
meme <- read.csv("LuciferaseTree_dNds/results/hyphy/lucclade.meme.csv",header=TRUE)#
#Pull positively selected sites using vector of output table from meme#
#Add 2 FEL sites #
c(meme_table$Codon, 43, 209) -> addfel#
pos_sel <- alignment[,c("sp",paste("s",addfel, sep=""))]#
#
#******************Now combine positively selected site data with color  data#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(translate, table1, by='Species')#
lucNcolor <- merge(alignment, tmpmerge, by='sp')#
pos_sel_col <- lucNcolor[,c("sp",paste("s",addfel, sep=""),"Lmax_Mean", "FWHM_Mean")]#
remove_constant(pos_sel_col)->pos_sel_col ##Invariant sites because luc varies in spp without color data #
#
#******************Here combining positively selected site data with decay data#
decay <- read.csv("Raw Data/expression-kinetics/decay_averages_all_for comparison_with_color.csv",header=TRUE)#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(decay, translate, by="PubName")#
lucNkinetics <- merge(alignment, tmpmerge, by="sp")#
pos_sel_decay <- lucNkinetics[,c("sp",paste("s",meme$Codon, sep=""),"lambda")]#
remove_constant(pos_sel_decay)->pos_sel_decay ##Invariant sites because luc varies in spp without decay data #
#
#*****************Create data frame for luciferase, decay, and color for any available data#
tmpmerge <- merge(translate, table1, by='Species', all=TRUE)#
tmpmerge2 <- merge(tmpmerge, decay, by = 'PubName', all=TRUE)#
#remove some columns we do not need#
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool#
datamerge[,bool] -> InterestingSites#
memepvals <- lapply(meme$Episodicselectiondetected, function(x) {#
               gsub("Yes_p=", "", x)#
               })#
c("",memepvals, "", "", "", "", "") -> mprow#
#
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
tmpmerge <- merge(translate, table1, by='Species', all=TRUE)
datamerge <- merge(tmpmerge, decay, by = 'PubName', all=TRUE)
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool
datamerge[,bool] -> InterestingSites
InterestingSites
InterestingSites
datamerge <- merge(alignment, tmpmerge2, by="sp", all=TRUE)
datamerge
datamerge <- merge(alignment, tmpmerge2, by="sp")
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool#
datamerge[,bool] -> InterestingSites
InterestingSites
require(dplyr)#
#
alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))#
alignment %>% arrange(V1) -> alignment #sort by species name #
colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"#
#**************Functions to translate between alignment numbers for individual amino acids#
aligned2cyp <- function(alignednumber) {		#This translates the present alignment number to the # in Cypridina. Input ##
	#conversion table for sites corresponding between Cypridina and present alignment#
	read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign#
	cyptoalign$Cypridina_noctiluca_BAD08210[match(alignednumber,cyptoalign$Aligned)]#
}#
cyp2aligned <- function(cypnumber) {		#This translates the number in Cyprdina to the present alignment number. Input ##
	#conversion table for sites corresponding between Cypridina and present alignment#
	read.csv(file="LuciferaseTree_dNds/results/CypSites.csv")->cyptoalign#
	cyptoalign$Aligned[match(cypnumber,cyptoalign$Cypridina_noctiluca_BAD08210)]#
}#
displaysites <- function(al_sites){#
	alignment <- read.csv("LuciferaseTree_dNds/results/combined_aa.csv",header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))#
	alignment %>% arrange(V1) -> alignment #sort by species name #
	colnames(alignment)[2:ncol(alignment)] <- paste("s",seq(1,(ncol(alignment)-1)),sep=""); colnames(alignment)[1] <- "sp"#
#
	view <- alignment[,c("sp",paste("s",al_sites, sep=""))]#
	data.frame(view[-1]) -> view_df; view_df->view_df_named;#
	rownames(view_df_named) <- view$sp#
	view	#
}#
#****************In old versions, I hand coded mutations into a csv file. These could be error prone, so did more automated approach below#
#These are therefore no longer used#
#For simplicity in R coding, I have 3 separate files. If I were better at R I could easily pull subsets out of 1 large file, but alas#
#So, cnplus is a file that contains all the sequence data#
read.csv(file="Luciferase/Cypridina only.csv") -> cn#
read.csv(file="Luciferase/Cypridina mutagenesis.csv") -> cnplus#
read.csv(file="Luciferase/NonCypridina only.csv") -> nc#
#
#*****************These are important sites -- either mutated or under positive selection#
	#Mutated#
allmutsites <- c(38, 45, 75, 79, 87, 126, 167, 170, 178, 191, 197, 223, 258, 276, 280, 372, 375, 403, 404, 405, 406, 407, 479)#
  al_allmutsites <- cyp2aligned(allmutsites)#
#
varmutsites <- c(38, 178, 375, 404, 405) #Cypridina numbering sites with 3 states#
  al_varmutsites <- cyp2aligned(varmutsites)#
#
	#Positive selection#
al_fel <- c(43, 209) #positively selected in FEL these are alignment numbers#
  fel <- aligned2cyp(al_fel)#
#
meme_table <- read.csv("LuciferaseTree_dNds/results/hyphy/lucclade.meme.csv",header=TRUE)#
al_meme <- meme_table$Codon#
  meme <- aligned2cyp(al_meme)#
#******************Create data frame for mutations (only lmax for mutations). data frame called mutated#
#csv file containing mutants and lmax data#
read.csv(file="LuciferaseTree_dNds/results/Cypridina_mutations.csv", header=FALSE, stringsAsFactors=FALSE, colClasses = c("character"))->mutseqs#
colnames(mutseqs)[2:ncol(mutseqs)] <- paste("c",seq(1,(ncol(mutseqs)-1)),sep="")#
colnames(mutseqs)[555] <- "lmax" #last column is 555, which contains lambda max values for mutants#
mutated <- data.frame(cbind(mutseqs$V1, mutseqs$c38, mutseqs$c45, mutseqs$c75, mutseqs$c79, mutseqs$c87, mutseqs$c126, mutseqs$c167, mutseqs$c170, mutseqs$c178, mutseqs$c191, mutseqs$c197, mutseqs$c223, mutseqs$c258, mutseqs$c276, mutseqs$c280, mutseqs$c372, mutseqs$c375, mutseqs$c403, mutseqs$c404, mutseqs$c405, mutseqs$c406, mutseqs$c407, mutseqs$c479, mutseqs$lmax) )#
colnames(mutated) <- c("mutant", "c38", "c45", "c75", "c79","c87", "c126", "c167", "c170", "c178", "c191", "c197", "c223", "c258", "c276", "c280", "c372", "c375", "c403", "c404", "c405", "c406", "c407", "c479", "lmax")#
as.numeric(as.character(mutated$lmax))->mutated$lmax#
#
#********************Create data frame for natural variants of mutated sites.  The data fram is called mut_nat_col for mutated sites; natural; color#
#combine cypridina mutations with natural luciferases for mutated sites#
#
displaysites(al_allmutsites) -> nat_mutsites#
table1 <- read.table(file="Table1.txt", sep="\t", header=TRUE) #Read again if not executed above#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(translate, table1, by='Species')#
lucNcolor <- merge(nat_mutsites, tmpmerge, by='sp')#
natural_col <- merge(alignment, tmpmerge, by='sp')#
alignment_numbers <- c(38, 45, 75, 79, 87, 126, 167, 170, 178, 191, 197, 223, 258, 276, 280, 372, 375, 403, 404, 405, 406, 407, 479)#
cbind(natural_col$sp,natural_col[,cyp2aligned(alignment_numbers+1)], natural_col$Lmax_Mean) -> mut_nat_col#
colnames(mut_nat_col) <- colnames(mutated)#
#
#********************Combine mutated sites and natural variants at those same sites called all_col_mut#
rbind(mutated, mut_nat_col) -> all_col_mut#
#
#*******************sites differ between Pan and Pmo#
displaysites(c(38,57,110,111,171,182,187,189,224,266,273,371,478)) -> panpmo#
#
#***********************#
#Read results in csv from meme selection analysis, including positively selected sites#
meme <- read.csv("LuciferaseTree_dNds/results/hyphy/lucclade.meme.csv",header=TRUE)#
#Pull positively selected sites using vector of output table from meme#
#Add 2 FEL sites #
c(meme_table$Codon, 43, 209) -> addfel#
pos_sel <- alignment[,c("sp",paste("s",addfel, sep=""))]#
#
#******************Now combine positively selected site data with color  data#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(translate, table1, by='Species')#
lucNcolor <- merge(alignment, tmpmerge, by='sp')#
pos_sel_col <- lucNcolor[,c("sp",paste("s",addfel, sep=""),"Lmax_Mean", "FWHM_Mean")]#
remove_constant(pos_sel_col)->pos_sel_col ##Invariant sites because luc varies in spp without color data #
#
#******************Here combining positively selected site data with decay data#
decay <- read.csv("Raw Data/expression-kinetics/decay_averages_all_for comparison_with_color.csv",header=TRUE)#
translate <- read.csv("Raw Data/expression-kinetics/translate_lucname_decayname.csv",header=TRUE)#
tmpmerge <- merge(decay, translate, by="PubName")#
lucNkinetics <- merge(alignment, tmpmerge, by="sp")#
pos_sel_decay <- lucNkinetics[,c("sp",paste("s",meme$Codon, sep=""),"lambda")]#
remove_constant(pos_sel_decay)->pos_sel_decay ##Invariant sites because luc varies in spp without decay data #
#
#*****************Create data frame for luciferase, decay, and color for any available data#
tmpmerge <- merge(translate, table1, by='Species', all=TRUE)#
tmpmerge2 <- merge(tmpmerge, decay, by = 'PubName', all=TRUE)#
datamerge <- merge(alignment, tmpmerge2, by="sp")#
#remove some columns we do not need#
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool#
datamerge[,bool] -> InterestingSites#
memepvals <- lapply(meme$Episodicselectiondetected, function(x) {#
               gsub("Yes_p=", "", x)#
               })#
c("",memepvals, "", "", "", "", "") -> mprow#
#
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
InterestingSites
colorsites
compositetable
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite(404, "Site 404 - Color site under negative selection")
cyp2aligned(c(74,160))
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
par(mfrow=c(2,2))#
plotASRsite(207, "Site 207 - Neutrally evolving color site")#
plotASRsite(404, "Site 404 - Color site under negative selection")#
#
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")#
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
par(mfrow=c(2,2))
plotASRsite(207, "Site 207 - Neutrally evolving color site")
par(mfrow=c(2,2))#
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	#quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
par(mfrow=c(2,2))
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite(404, "Site 404 - Color site under negative selection")
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	#quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1, main =title)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
par(mfrow=c(2,2))#
plotASRsite(207, "Site 207 - Neutrally evolving color site")#
plotASRsite(404, "Site 404 - Color site under negative selection")#
#
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")#
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1, main =title)
plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1, main = "TEST")
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	#quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
par(mfrow=c(2,2))#
plotASRsite(207, "Site 207 - Neutrally evolving color site")#
plotASRsite(404, "Site 404 - Color site under negative selection")#
#
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")#
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite(404, "Site 404 - Color site under negative selection")
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
plotASRsite(404, "Site 404 - Color site under negative selection")
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
displaysites(189)
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
#
	quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite(404, "Site 404 - Color site under negative selection")
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
displaysites(207)
require(phytools)#
#
InterestingSites[complete.cases(InterestingSites), ] -> full#
data.frame(cbind(full$Lmax_Mean, full$lambda))->pms#
row.names(pms) <- full$sp#
c("Khas", "Mchi", "MspIR", "MspSVU", "Pan", "Pmor",  "PspWLU", "Vhil")-> row.names(pms)#
pruned.tree<-drop.tip(luc_tree,luc_tree$tip.label[-match(full$sp, luc_tree$tip.label)])#
c("Mchi", "MspIR", "MspSVU", "Pmor", "Pan", "PspWLU", "Khas", "Vhil")->pruned.tree$tip.label#
#
phylomorphospace(pruned.tree, pms, label="radial", xlab="Lambda max (nm)", ylab="Enzymatic Decay Constant", cx=.1)#
#Correlated with PIC?#
#pic(pms$X1, pruned.tree)->pic.lm#
#pic(pms$X2, pruned.tree)->pic.dec#
#fit.pic<-lm(pic.lm~pic.dec+0)#
#fit.pic#
#summary(fit.pic)
require(phytools)#
#
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")#
ladderize(luc_tree, right=TRUE) -> luc_tree#
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do#
#
par(mfrow=c(2,2))#
plotASRsite(207, "Site 207 - Neutrally evolving color site")#
p
displaysites(207)
plotASRsite(207, "Site 207 - Neutrally evolving color site")
plotASRsite(404, "Site 404 - Color site under negative selection")
displaysites(404)
plotASRsite(102, "Site 102 - Correlated with color and decay and under positive selection")
displaysites(102)
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
displaysites(189)
cursite
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
	cols<-setNames(c("red","blue", "green", "orange", "yellow", "black"),levels(cursite))#
	quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
plotASRsite(189, "Site 189 - Correlated with color and decay and under positive selection")
aligned2cyp(189)
displaysites(189)
displaysites(132)
InterestingSites
require(phytools)#
#
InterestingSites[complete.cases(InterestingSites), ] -> full#
data.frame(cbind(full$Lmax_Mean, full$lambda))->pms#
row.names(pms) <- full$sp#
c("Khas", "Mchi", "MspIR", "MspSVU", "Pan", "Pmor",  "PspWLU", "Vhil")-> row.names(pms)#
pruned.tree<-drop.tip(luc_tree,luc_tree$tip.label[-match(full$sp, luc_tree$tip.label)])#
c("Mchi", "MspIR", "MspSVU", "Pmor", "Pan", "PspWLU", "Khas", "Vhil")->pruned.tree$tip.label#
#
phylomorphospace(pruned.tree, pms, label="radial", xlab="Lambda max (nm)", ylab="Enzymatic Decay Constant", cx=.1)
plot(luc_tree)
aligned2cyp(102)
aligned2cyp(404)
displaysites(404)
displaysites(102)
displaysites(207)
aligned2cyp(207)
displaysites(404)
plotASRsite <- function(site, title) {#
	x <- alignment[, site+1]#
	data.frame(x, row.names=alignment$sp) -> x#
#
	cursite <- setNames(x[,1], rownames(x))#
	fitER<-ace(cursite,luc_tree_root,model="ER",type="discrete")#
	fitER#
	fitER$lik.anc#
	cols<-setNames(c("red","blue", "green", "orange", "yellow", "black"),levels(cursite))#
	quartz(title, 8, 5)#
	plotTree(luc_tree_root,fsize=.6,ftype="i",lwd=1)#
#
	nodelabels(node=1:luc_tree_root$Nnode+Ntip(luc_tree_root),#
    		pie=fitER$lik.anc,piecol=cols,cex=0.4)#
	tiplabels(pie=to.matrix(cursite[luc_tree_root$tip.label],#
    		levels(cursite)),piecol=cols,cex=0.3)#
}
cyp2aligned(404)
plotASRsite(207, "Site 178 - Neutrally evolving color site")
plotASRsite(435, "Site 404 - Color site under negative selection")
displaysites(404)
plotASRsite(435, "Site 404 - Color site under negative selection")
cyp2aligned(102)
aligned2cyp(102)
aligned2cyp(189)
cyp2aligned(19)
plotASRsite(41, "Site 19 - Correlated with decay and under positive selection")
cyp2aligned(114)
plotASRsite(142, "Site 114 - Correlated with decay and under positive selection")
plotASRsite(41, "Site 19 - Correlated with decay and under positive selection")
displaysites(114)
displaysites(cyp2aligned(114))
displaysites(cyp2aligned(19))
InterestingSites
justthesitesmaam <- displaysites(c(al_meme, al_fel))
justthesitesmaam
datamerge <- merge(justthesitesmaam, tmpmerge2, by="sp")
datamerge
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool
datamerge[,bool] -> InterestingSites
InterestingSites
InterestingSites
signifmutsites <- c(38, 178, 404)
al_signifmutsites <- cyp2aligned(signifmutsites)
justthesitesmaam <- displaysites(c(al_signifmutsites, al_meme, al_fel))
datamerge <- merge(justthesitesmaam, tmpmerge2, by="sp")
!names(datamerge) %in% c("N", "PubName", "Species", "country", "genus", "n_lam", "Lmax_SD", "FWHM_SD", "lamSE") -> bool
datamerge[,bool] -> InterestingSites
InterestingSites
memepvals <- lapply(meme$Episodicselectiondetected, function(x) {#
               gsub("Yes_p=", "", x)#
               })#
c("",memepvals, "", "", "", "", "") -> mprow#
#
data.frame(InterestingSites[-1]) -> ps_df; ps_df->ps_df_named;#
rownames(ps_df_named) <- pos_sel$sp#
rownames(ps_df_named) <- pos_sel$sp#
#
round_df <- function(x, digits) {#
    # round all numeric variables#
    # x: data frame #
    # digits: number of digits to round#
    numeric_columns <- sapply(x, mode) == 'numeric'#
    x[numeric_columns] <-  round(x[numeric_columns], digits)#
    x#
}#
#
#This dataframe used in Figure 1#
round_df(ps_df_named, 1)->ps_df_named#
#
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(178, 404,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
c(al_signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow
cyprow
displaysites(cyp2aligned(c(178, 404))) -> colorsites#
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable#
#
c(al_signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
al_signifmutsites -> colorsites
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable
colorsites
displaysites(al_signifmutsites) -> colorsites
cbind(colorsites[,2:3], ps_df_named[1:18]) -> compositetable
compositetable
cbind(colorsites[,2:4], ps_df_named[1:18]) -> compositetable
compositetable
displaysites(al_signifmutsites) -> colorsites#
cbind(colorsites[,2:4], ps_df_named[1:18]) -> compositetable#
#
c(al_signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, compositetable) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
c(signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow
rbind(cyprow, compositetable) -> fullcompositetable
rownames(fullcompositetable)[1] <- "Cypridina Site Number"
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
InterestingSites
require(phytools)
source("plotTree.R")
luc_tree <- read.newick(file="LuciferaseTree_dNds/results/phylogenies/combined_codon.treefile")
ladderize(luc_tree, right=TRUE) -> luc_tree
reroot(luc_tree, 17, resolve.root=TRUE, .5) -> luc_tree_root #root tree at midpoint of branch, which ape does not like to do
quartz("Figure 1", 10, 4)#
plotTree(tree=luc_tree_root,ancestral.reconstruction=F,tip.labels=TRUE, lwd=1, infoFile=ps_df_named, treeWidth=7,infoWidth=4, infoCols=c("Lmax_Mean", "s41", "s93", "s102", "s142", "s160", "s177", "s189", "s261", "s285", "s291", "s320", "s389", "s477", "lambda"))
plotTree(tree=luc_tree_root,ancestral.reconstruction=F,tip.labels=TRUE, lwd=1, infoFile=ps_df_named, treeWidth=7,infoWidth=4, infoCols=c("Lmax_Mean", "s41", "s93", "s102", "s142", "s160", "s177", "s189", "s261", "s285", "s291", "s320", "s389", "s477", "lambda"))
quartz("Figure 1", 10, 4)#
plotTree(tree=luc_tree_root,ancestral.reconstruction=F,tip.labels=TRUE, lwd=1, infoFile=ps_df_named, treeWidth=7,infoWidth=4, infoCols=c("Lmax_Mean", "s41", "s93", "s102", "s142", "s160", "s177", "s189", "s261", "s285", "s291", "s320", "s389", "s477", "lambda"))
rbind(cyprow, InterestingSites) -> fullcompositetable
rownames(fullcompositetable)[1] <- "Cypridina Site Number"
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
ps_df
ps_df_named
rbind(cyprow, ps_df_named) -> fullcompositetable
rownames(fullcompositetable)[1] <- "Cypridina Site Number"
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
round_df(ps_df_named, 1)->ps_df_named#
#
#These are all the sites discussed in manuscript -- annotated#
c(signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, ps_df_named) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
round_df(ps_df_named, 1)->ps_df_named#
#
#These are all the sites discussed in manuscript -- annotated#
c(signifmutsites,aligned2cyp(meme$Codon), fel, "", "", "") -> cyprow#
rbind(cyprow, ps_df_named) -> fullcompositetable#
rownames(fullcompositetable)[1] <- "Cypridina Site Number"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","-","-","-","-","-","-","-", "-","-", "+", "+", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[17] <- "Significant Pervasive Diversifying Selection (FEL)"#
#
rbind(fullcompositetable, c("-", "-","+","+","+","+","+","+","+","+","+","+","+", "+","+", "-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[18] <- "Significant Episodic Diversifying Selection (MEME)"#
#
rbind(fullcompositetable, c("M", "M","-","-","+","+","-","-","+","-","-","-","-", "-","-", "-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[19] <- "Significant Correlation with Lambda Max"#
#
rbind(fullcompositetable, c("-", "-","-","-","-","-","+","-","+","+","-","+","-", "-","-", "-", "-", "-", "-", "-", "-")) -> fullcompositetable#
rownames(fullcompositetable)[20] <- "Significant Correlation with Enzymatic Decay"#
#
fullcompositetable
